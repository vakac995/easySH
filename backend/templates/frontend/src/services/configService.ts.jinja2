
import type { AppConfig } from '@/types/config';

class ConfigService {
  private static instance: ConfigService;
  private config: AppConfig | null = null;

  private constructor() {}

  public static getInstance(): ConfigService {
    if (!ConfigService.instance) {
      ConfigService.instance = new ConfigService();
    }
    return ConfigService.instance;
  }

  public async fetchConfig(): Promise<AppConfig> {
    // In a real app, you would fetch this from an API
    // For this example, we'll use a mock config.
    const mockConfig: AppConfig = {
      modules: [
        { id: 'fibi', name: 'Fibi', requiredPermissions: ['fibi:read'], enabled: true },
        { id: 'retention', name: 'Retention', requiredPermissions: ['retention:read'], enabled: false },
      ],
      features: {
        darkMode: true,
        analytics: false,
      },
    };

    this.config = mockConfig;
    return this.config;
  }

  public getConfig(): AppConfig | null {
    return this.config;
  }
}

export default ConfigService.getInstance();
